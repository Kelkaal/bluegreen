services:
  nginx:
    image: nginx:alpine
    ports:
      - "8080:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - nginx_logs:/var/log/nginx
    command: >
      sh -c "
        # REMOVE THE SYMLINKS TO STDOUT/STDERR
        rm -f /var/log/nginx/access.log /var/log/nginx/error.log &&
        # CREATE ACTUAL FILES (not symlinks)
        touch /var/log/nginx/access.log /var/log/nginx/error.log &&
        # SET PROPER OWNERSHIP AND PERMISSIONS
        chown nginx:nginx /var/log/nginx/*.log &&
        chmod 644 /var/log/nginx/*.log &&
        # VERIFY THEY ARE REGULAR FILES
        echo 'Log files created:' &&
        ls -la /var/log/nginx/ &&
        # START NGINX
        nginx -g 'daemon off;'
      "
    depends_on:
      - app_blue
      - app_green
    networks:
      - app-network

  app_blue:
    image: ${BLUE_IMAGE:-yimikaade/wonderful:devops-stage-two}
    ports:
      - "8081:3000"
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE:-blue-release-v1}
      - PORT=3000
    networks:
      - app-network

  app_green:
    image: ${GREEN_IMAGE:-yimikaade/wonderful:devops-stage-two}
    ports:
      - "8082:3000"
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN:-green-release-v1}
      - PORT=3000
    networks:
      - app-network

  alert_watcher:
    build: 
      context: .
      dockerfile: Dockerfile.watcher
    volumes:
      - nginx_logs:/var/log/nginx
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD:-2.0}
      - WINDOW_SIZE=${WINDOW_SIZE:-200}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC:-300}
    depends_on:
      - nginx
    networks:
      - app-network
    restart: unless-stopped

volumes:
  nginx_logs:

networks:
  app-network:
    driver: bridge
