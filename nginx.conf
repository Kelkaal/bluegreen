events {
    worker_connections 1024;
}

http {
    log_format custom_log 'time:$time_iso8601|'
                          'pool:$http_x_app_pool|'
                          'release:$http_x_release_id|'
                          'status:$status|'
                          'upstream_status:$upstream_status|'
                          'upstream_addr:$upstream_addr|'
                          'request_time:$request_time|'
                          'upstream_response_time:$upstream_response_time|'
                          'method:$request_method|'
                          'uri:$request_uri|'
                          'remote_addr:$remote_addr';

    access_log /var/log/nginx/access.log custom_log;
    error_log /var/log/nginx/error.log;

    upstream blue_pool {
        server app_blue:3000;
    }

    upstream green_pool {
        server app_green:3000;
    }

    server {
        listen 8080;
        server_name _;

        location / {
            # Use header to determine pool
            if ($http_x_app_pool = "green") {
                proxy_pass http://green_pool;
            }
            if ($http_x_app_pool = "blue") {
                proxy_pass http://blue_pool;
            }
            # Default to blue
            proxy_pass http://blue_pool;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-App-Pool $http_x_app_pool;
            proxy_set_header X-Release-Id $http_x_release_id;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
